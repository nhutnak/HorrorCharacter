Assignment: Horror Movie Character System Using Inheritance, Interfaces, Enumerations, and Polymorphism

You are tasked with designing a character system representing classic horror movie monsters and their attributes, skills, and weaknesses

1. Define an enumeration called Vulnerability to represent common weaknesses of horror movie characters:
  - FIRE
  - SUNLIGHT
  - SILVER
  - HOLY_WATER
  - ...or any others of your choosing that make sense for your classes

2. Define a base abstract class HorrorCharacter with the following attributes and methods:
  - void attack() - Basic attack action.
  - void flee() - Action when the character flees from danger.
  - Vulnerability[] getVulnerabilities() - Return the vulnerabilities of the character.

  - String name
  - int health
  - Vulnerability[] vulnerabilities

3. Create three subclasses: Vampire, Zombie, and Werewolf, that extend the HorrorCharacter class. Feel free to add others if you choose.
  - Provide a unique implementation for the attack() and flee() methods.
  - Have vulnerabilities based on the Vulnerability enum (e.g., a Vampire might be vulnerable to SUNLIGHT and HOLY_WATER, while a Zombie might be vulnerable to FIRE and HOLY_WATER).
  - Include unique behavior in the attack() method (e.g., a Vampire could bite its victim, a Zombie could lunge, etc.).

4. Create an interface Transformable with a method void transform();.
- Implement the Transformable interface for the Vampire and Werewolf classes.  When transformed, the attack() methods of these creatures should change

5. Create Javadoc for all your classes. Describe all classes methods, parameters, and return types. Make sure to generate the Javadoc before submitting the project

6. Create a Test Class HorrorCharacterApp:
  - Demonstrate the functionality of each class, using inheritance and interface based polymorphism
  (for example, housing classes in containers typed to their parent class or interface,
  and iterating through demonstrating the proper method definitions are running).